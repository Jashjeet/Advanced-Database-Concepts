
postgres=# \i C:/Users/jashj/OneDrive/'Semester 2'/'Advanced Database Concepts'/'Assignment 4'/'jsmadan_Assignment_4.sql'
CREATE DATABASE
You are now connected to database "assignment4jashjeet" as user "postgres".
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
INSERT 0 10
INSERT 0 8
INSERT 0 7
INSERT 0 14
INSERT 0 1
Question 1
Part (a)
CREATE FUNCTION
CREATE TRIGGER
INSERT 0 1
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:108: ERROR:  sid is null
CONTEXT:  PL/pgSQL function check_student_pkey_constraint_fn() line 7 at RAISE
CREATE FUNCTION
CREATE TRIGGER
INSERT 0 1
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:137: ERROR:  course no. is null
CONTEXT:  PL/pgSQL function check_course_pkey_constraint_fn() line 7 at RAISE
Part (b)
CREATE FUNCTION
CREATE TRIGGER
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:165: ERROR:  course no. does not exist in Course
CONTEXT:  PL/pgSQL function check_prerequisite_fkey_constraint_fn() line 4 at RAISE
CREATE FUNCTION
CREATE TRIGGER
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:197: ERROR:  course no. does not exist in Course
CONTEXT:  PL/pgSQL function check_hastaken_fkey_constraint_fn() line 4 at RAISE
CREATE FUNCTION
CREATE TRIGGER
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:225: ERROR:  course no. does not exist in Course
CONTEXT:  PL/pgSQL function check_enroll_fkey_constraint_fn() line 4 at RAISE
CREATE FUNCTION
CREATE TRIGGER
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:254: ERROR:  course no. does not exist in Course
CONTEXT:  PL/pgSQL function check_waitlist_fkey_constraint_fn() line 4 at RAISE
CREATE FUNCTION
CREATE TRIGGER
DELETE 1
now sid =1 will not be reflected in child tables containing sid as foreign key
enroll table
 sid | cno
-----+-----
   2 | 403
(1 row)


hastaken table
 sid | cno
-----+-----
   1 | 201
   1 | 202
   1 | 301
   2 | 201
   2 | 202
   3 | 201
   4 | 201
   4 | 202
   4 | 203
   4 | 204
   5 | 201
   5 | 202
   5 | 301
   5 | 204
(14 rows)


waitlist table
 sid | cno | pos
-----+-----+-----
(0 rows)


CREATE FUNCTION
CREATE TRIGGER
DELETE 1
now cno =201 will not be reflected in child tables containing cno as foreign key
enroll table
 sid | cno
-----+-----
   2 | 403
(1 row)


hastaken table is exception as it is a historical table
 sid | cno
-----+-----
   1 | 201
   1 | 202
   1 | 301
   2 | 201
   2 | 202
   3 | 201
   4 | 201
   4 | 202
   4 | 203
   4 | 204
   5 | 201
   5 | 202
   5 | 301
   5 | 204
(14 rows)


waitlist table
 sid | cno | pos
-----+-----+-----
(0 rows)


prerequisite table
 cno | prereq
-----+--------
 301 |    202
 302 |    202
 302 |    203
 401 |    301
 401 |    204
 402 |    302
(6 rows)


Part (c)
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
CREATE TRIGGER
hastaken update or delete will not take place
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:389: ERROR:  Updation not allowed in HasTaken table
CONTEXT:  PL/pgSQL function update_hastaken_notallowed_fn() line 3 at RAISE
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:390: ERROR:  Deletion not allowed in HasTaken table
CONTEXT:  PL/pgSQL function delete_hastaken_notallowed_fn() line 3 at RAISE
CREATE TABLE
INSERT 0 1
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
CREATE TRIGGER
After enrollment begins
INSERT 0 1
No insert on hastaken allowed
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:447: ERROR:  sid does not exist in Student
CONTEXT:  PL/pgSQL function check_hastaken_fkey_constraint_fn() line 7 at RAISE
Part (d)
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
CREATE TRIGGER
DELETE 1
INSERT 0 1
After enrollment begins
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:521: ERROR:  sid does not exist in Student
CONTEXT:  PL/pgSQL function check_enroll_fkey_constraint_fn() line 7 at RAISE
Prerequisite cannot be updated
INSERT 0 1
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
CREATE TRIGGER
As enrollment has begun , new course cannot be added now
INSERT 0 1
For part 2 we will drop all the tables and reinitialize with previous inserted values
DROP TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
INSERT 0 10
INSERT 0 8
INSERT 0 7
INSERT 0 14
INSERT 0 1
Question 2
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
CREATE TRIGGER
 sid | cno | pos
-----+-----+-----
(0 rows)


CREATE FUNCTION
CREATE TRIGGER
sid=1 cannot take cno=302 as it has not take prerequisite course no 201
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:739: ERROR:  Not all prerequisites met
CONTEXT:  PL/pgSQL function chk_on_enroll_before_ins_fn() line 10 at RAISE
sid=1 can take course 403 as it has no prerequisite
INSERT 0 1
After this insertion for course no 403 , total=max hence next enrollments will be pushed to waitlist
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:745: NOTICE:  Maximum Enrollment reached. Placed in Waitlist
INSERT 0 1
psql:C:/Users/jashj/OneDrive/Semester 2/Advanced Database Concepts/Assignment 4/jsmadan_Assignment_4.sql:746: NOTICE:  Maximum Enrollment reached. Placed in Waitlist
INSERT 0 1
Now sid 2 and 3 are in waitlist with position 1 and 2 respectively
 sid | cno | pos
-----+-----+-----
   2 | 403 |   1
   3 | 403 |   2
(2 rows)


If sid=2 drops the course , sid=3 will rise to position 1 in waitlist
DELETE 1
 sid | cno | pos
-----+-----+-----
   3 | 403 |   1
(1 row)


Question 3
CREATE TABLE
CREATE VIEW
INSERT 0 1
CREATE FUNCTION
CREATE TRIGGER
CREATE FUNCTION
      runexperiment
--------------------------
 (10,11.999999,2.8982754)
(1 row)


     runexperiment
-----------------------
 (100,10.48,2.9647262)
(1 row)


       runexperiment
----------------------------
 (1000,10.468003,2.9063692)
(1 row)


        runexperiment
-----------------------------
 (10000,10.459011,2.9815304)
(1 row)


You are now connected to database "postgres" as user "postgres".
DROP DATABASE
postgres=#